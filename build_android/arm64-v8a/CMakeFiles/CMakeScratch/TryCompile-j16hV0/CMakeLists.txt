cmake_minimum_required(VERSION 3.31.5.0)
cmake_policy(SET CMP0126 OLD)
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE C)
set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES "")
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "-g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat ")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_C_FLAGS_DEBUG "-fno-limit-debug-info ")
set(CMAKE_EXE_LINKER_FLAGS "-static-libstdc++ -Wl,--build-id=sha1 -Wl,--no-rosegment -Wl,--fatal-warnings -Wl,--no-undefined -Qunused-arguments  ")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-v]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
cmake_policy(SET CMP0155 OLD)
cmake_policy(SET CMP0157 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/Users/mac/Documents/GitHub/AEC3/build_android/arm64-v8a/CMakeFiles/CMakeScratch/TryCompile-j16hV0")
add_executable(cmTC_62002)
target_sources(cmTC_62002 PRIVATE
  "/usr/local/share/cmake/Modules/CMakeCCompilerABI.c"
)
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_62002_loc"
     CONTENT $<TARGET_FILE:cmTC_62002>)
target_link_libraries(cmTC_62002 ${LINK_LIBRARIES})
